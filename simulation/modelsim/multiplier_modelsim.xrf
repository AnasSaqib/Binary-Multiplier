vendor_name = ModelSim
source_file = 1, Z:/DLD 2/Project2/multiplier.vhd
source_file = 1, Z:/DLD 2/Project2/db/multiplier.cbx.xml
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = multiplier
instance = comp, \Add9~10\, Add9~10, multiplier, 1
instance = comp, \Add9~12\, Add9~12, multiplier, 1
instance = comp, \Add9~26\, Add9~26, multiplier, 1
instance = comp, \Add9~44\, Add9~44, multiplier, 1
instance = comp, \Add9~60\, Add9~60, multiplier, 1
instance = comp, \Add9~62\, Add9~62, multiplier, 1
instance = comp, \Selector16~0\, Selector16~0, multiplier, 1
instance = comp, \product[1]\, product[1], multiplier, 1
instance = comp, \BCD~16\, BCD~16, multiplier, 1
instance = comp, \clk_count[31]\, clk_count[31], multiplier, 1
instance = comp, \clk_count[22]\, clk_count[22], multiplier, 1
instance = comp, \Equal1~3\, Equal1~3, multiplier, 1
instance = comp, \clk_count[13]\, clk_count[13], multiplier, 1
instance = comp, \clk_count[6]\, clk_count[6], multiplier, 1
instance = comp, \clk_count[5]\, clk_count[5], multiplier, 1
instance = comp, \Equal1~8\, Equal1~8, multiplier, 1
instance = comp, \PPSMPR[1]\, PPSMPR[1], multiplier, 1
instance = comp, \clk_count~1\, clk_count~1, multiplier, 1
instance = comp, \clk_count~8\, clk_count~8, multiplier, 1
instance = comp, \clk_count~11\, clk_count~11, multiplier, 1
instance = comp, \MPD[0]\, MPD[0], multiplier, 1
instance = comp, \MPD[3]\, MPD[3], multiplier, 1
instance = comp, \MPD[2]\, MPD[2], multiplier, 1
instance = comp, \Selector15~1\, Selector15~1, multiplier, 1
instance = comp, \clk~input\, clk~input, multiplier, 1
instance = comp, \A[0]~input\, A[0]~input, multiplier, 1
instance = comp, \A[3]~input\, A[3]~input, multiplier, 1
instance = comp, \A[2]~input\, A[2]~input, multiplier, 1
instance = comp, \clk~inputclkctrl\, clk~inputclkctrl, multiplier, 1
instance = comp, \product[1]~feeder\, product[1]~feeder, multiplier, 1
instance = comp, \PPSMPR[1]~feeder\, PPSMPR[1]~feeder, multiplier, 1
instance = comp, \done~output\, done~output, multiplier, 1
instance = comp, \stateout[0]~output\, stateout[0]~output, multiplier, 1
instance = comp, \stateout[1]~output\, stateout[1]~output, multiplier, 1
instance = comp, \segment[0]~output\, segment[0]~output, multiplier, 1
instance = comp, \segment[1]~output\, segment[1]~output, multiplier, 1
instance = comp, \segment[2]~output\, segment[2]~output, multiplier, 1
instance = comp, \segment[3]~output\, segment[3]~output, multiplier, 1
instance = comp, \segment[4]~output\, segment[4]~output, multiplier, 1
instance = comp, \segment[5]~output\, segment[5]~output, multiplier, 1
instance = comp, \segment[6]~output\, segment[6]~output, multiplier, 1
instance = comp, \segment2[0]~output\, segment2[0]~output, multiplier, 1
instance = comp, \segment2[1]~output\, segment2[1]~output, multiplier, 1
instance = comp, \segment2[2]~output\, segment2[2]~output, multiplier, 1
instance = comp, \segment2[3]~output\, segment2[3]~output, multiplier, 1
instance = comp, \segment2[4]~output\, segment2[4]~output, multiplier, 1
instance = comp, \segment2[5]~output\, segment2[5]~output, multiplier, 1
instance = comp, \segment2[6]~output\, segment2[6]~output, multiplier, 1
instance = comp, \segment3[0]~output\, segment3[0]~output, multiplier, 1
instance = comp, \segment3[1]~output\, segment3[1]~output, multiplier, 1
instance = comp, \segment3[2]~output\, segment3[2]~output, multiplier, 1
instance = comp, \segment3[3]~output\, segment3[3]~output, multiplier, 1
instance = comp, \segment3[4]~output\, segment3[4]~output, multiplier, 1
instance = comp, \segment3[5]~output\, segment3[5]~output, multiplier, 1
instance = comp, \segment3[6]~output\, segment3[6]~output, multiplier, 1
instance = comp, \Add9~0\, Add9~0, multiplier, 1
instance = comp, \Add9~2\, Add9~2, multiplier, 1
instance = comp, \clk_count[1]\, clk_count[1], multiplier, 1
instance = comp, \clk_count~12\, clk_count~12, multiplier, 1
instance = comp, \clk_count[0]\, clk_count[0], multiplier, 1
instance = comp, \Add9~4\, Add9~4, multiplier, 1
instance = comp, \clk_count[2]\, clk_count[2], multiplier, 1
instance = comp, \Add9~6\, Add9~6, multiplier, 1
instance = comp, \clk_count[3]\, clk_count[3], multiplier, 1
instance = comp, \Equal1~9\, Equal1~9, multiplier, 1
instance = comp, \Add9~8\, Add9~8, multiplier, 1
instance = comp, \clk_count[4]\, clk_count[4], multiplier, 1
instance = comp, \Add9~14\, Add9~14, multiplier, 1
instance = comp, \clk_count[7]\, clk_count[7], multiplier, 1
instance = comp, \Add9~16\, Add9~16, multiplier, 1
instance = comp, \clk_count[8]\, clk_count[8], multiplier, 1
instance = comp, \Add9~18\, Add9~18, multiplier, 1
instance = comp, \clk_count[9]\, clk_count[9], multiplier, 1
instance = comp, \Add9~20\, Add9~20, multiplier, 1
instance = comp, \clk_count[10]\, clk_count[10], multiplier, 1
instance = comp, \Add9~22\, Add9~22, multiplier, 1
instance = comp, \Add9~24\, Add9~24, multiplier, 1
instance = comp, \clk_count~9\, clk_count~9, multiplier, 1
instance = comp, \clk_count[12]\, clk_count[12], multiplier, 1
instance = comp, \Add9~28\, Add9~28, multiplier, 1
instance = comp, \clk_count~7\, clk_count~7, multiplier, 1
instance = comp, \clk_count[14]\, clk_count[14], multiplier, 1
instance = comp, \Add9~30\, Add9~30, multiplier, 1
instance = comp, \clk_count[15]\, clk_count[15], multiplier, 1
instance = comp, \Equal1~5\, Equal1~5, multiplier, 1
instance = comp, \clk_count~10\, clk_count~10, multiplier, 1
instance = comp, \clk_count[11]\, clk_count[11], multiplier, 1
instance = comp, \Equal1~6\, Equal1~6, multiplier, 1
instance = comp, \Equal1~7\, Equal1~7, multiplier, 1
instance = comp, \Add9~32\, Add9~32, multiplier, 1
instance = comp, \clk_count~6\, clk_count~6, multiplier, 1
instance = comp, \clk_count[16]\, clk_count[16], multiplier, 1
instance = comp, \Add9~34\, Add9~34, multiplier, 1
instance = comp, \clk_count[17]\, clk_count[17], multiplier, 1
instance = comp, \Add9~36\, Add9~36, multiplier, 1
instance = comp, \clk_count~5\, clk_count~5, multiplier, 1
instance = comp, \clk_count[18]\, clk_count[18], multiplier, 1
instance = comp, \Add9~38\, Add9~38, multiplier, 1
instance = comp, \clk_count~4\, clk_count~4, multiplier, 1
instance = comp, \clk_count[19]\, clk_count[19], multiplier, 1
instance = comp, \Add9~40\, Add9~40, multiplier, 1
instance = comp, \clk_count~3\, clk_count~3, multiplier, 1
instance = comp, \clk_count[20]\, clk_count[20], multiplier, 1
instance = comp, \Add9~42\, Add9~42, multiplier, 1
instance = comp, \Add9~46\, Add9~46, multiplier, 1
instance = comp, \clk_count[23]\, clk_count[23], multiplier, 1
instance = comp, \Add9~48\, Add9~48, multiplier, 1
instance = comp, \clk_count~0\, clk_count~0, multiplier, 1
instance = comp, \clk_count[24]\, clk_count[24], multiplier, 1
instance = comp, \Add9~50\, Add9~50, multiplier, 1
instance = comp, \clk_count[25]\, clk_count[25], multiplier, 1
instance = comp, \Add9~52\, Add9~52, multiplier, 1
instance = comp, \clk_count[26]\, clk_count[26], multiplier, 1
instance = comp, \Add9~54\, Add9~54, multiplier, 1
instance = comp, \Add9~56\, Add9~56, multiplier, 1
instance = comp, \clk_count[28]\, clk_count[28], multiplier, 1
instance = comp, \Add9~58\, Add9~58, multiplier, 1
instance = comp, \clk_count[29]\, clk_count[29], multiplier, 1
instance = comp, \clk_count[30]\, clk_count[30], multiplier, 1
instance = comp, \Equal1~0\, Equal1~0, multiplier, 1
instance = comp, \clk_count[27]\, clk_count[27], multiplier, 1
instance = comp, \Equal1~1\, Equal1~1, multiplier, 1
instance = comp, \clk_count~2\, clk_count~2, multiplier, 1
instance = comp, \clk_count[21]\, clk_count[21], multiplier, 1
instance = comp, \Equal1~2\, Equal1~2, multiplier, 1
instance = comp, \Equal1~4\, Equal1~4, multiplier, 1
instance = comp, \Equal1~10\, Equal1~10, multiplier, 1
instance = comp, \divided_clk~0\, divided_clk~0, multiplier, 1
instance = comp, \divided_clk~feeder\, divided_clk~feeder, multiplier, 1
instance = comp, \divided_clk~clkctrl\, divided_clk~clkctrl, multiplier, 1
instance = comp, \done~reg0feeder\, done~reg0feeder, multiplier, 1
instance = comp, \reset~input\, reset~input, multiplier, 1
instance = comp, \done~reg0\, done~reg0, multiplier, 1
instance = comp, \start~input\, start~input, multiplier, 1
instance = comp, \Selector6~0\, Selector6~0, multiplier, 1
instance = comp, \BC[0]~0\, BC[0]~0, multiplier, 1
instance = comp, \BC[0]\, BC[0], multiplier, 1
instance = comp, \Add1~0\, Add1~0, multiplier, 1
instance = comp, \BC[1]\, BC[1], multiplier, 1
instance = comp, \Selector14~0\, Selector14~0, multiplier, 1
instance = comp, \state.s3\, state.s3, multiplier, 1
instance = comp, \Selector15~0\, Selector15~0, multiplier, 1
instance = comp, \state.s0~feeder\, state.s0~feeder, multiplier, 1
instance = comp, \state.s0\, state.s0, multiplier, 1
instance = comp, \Selector12~0\, Selector12~0, multiplier, 1
instance = comp, \Selector12~1\, Selector12~1, multiplier, 1
instance = comp, \state.s1\, state.s1, multiplier, 1
instance = comp, \state.s2~feeder\, state.s2~feeder, multiplier, 1
instance = comp, \state.s2\, state.s2, multiplier, 1
instance = comp, \done~0\, done~0, multiplier, 1
instance = comp, \stateout~0\, stateout~0, multiplier, 1
instance = comp, \B[3]~input\, B[3]~input, multiplier, 1
instance = comp, \Add0~0\, Add0~0, multiplier, 1
instance = comp, \Selector4~0\, Selector4~0, multiplier, 1
instance = comp, \B[0]~input\, B[0]~input, multiplier, 1
instance = comp, \Selector10~0\, Selector10~0, multiplier, 1
instance = comp, \MPR[0]\, MPR[0], multiplier, 1
instance = comp, \PPS[3]~0\, PPS[3]~0, multiplier, 1
instance = comp, \PPS[0]\, PPS[0], multiplier, 1
instance = comp, \Selector7~0\, Selector7~0, multiplier, 1
instance = comp, \MPR[3]\, MPR[3], multiplier, 1
instance = comp, \B[2]~input\, B[2]~input, multiplier, 1
instance = comp, \Selector8~0\, Selector8~0, multiplier, 1
instance = comp, \MPR[2]\, MPR[2], multiplier, 1
instance = comp, \B[1]~input\, B[1]~input, multiplier, 1
instance = comp, \Selector9~0\, Selector9~0, multiplier, 1
instance = comp, \MPR[1]\, MPR[1], multiplier, 1
instance = comp, \PPSMPR[0]~feeder\, PPSMPR[0]~feeder, multiplier, 1
instance = comp, \PPSMPR[3]~0\, PPSMPR[3]~0, multiplier, 1
instance = comp, \PPSMPR[0]\, PPSMPR[0], multiplier, 1
instance = comp, \product[0]~feeder\, product[0]~feeder, multiplier, 1
instance = comp, \product[3]~0\, product[3]~0, multiplier, 1
instance = comp, \product[0]\, product[0], multiplier, 1
instance = comp, \PPSMPR[2]~feeder\, PPSMPR[2]~feeder, multiplier, 1
instance = comp, \PPSMPR[2]\, PPSMPR[2], multiplier, 1
instance = comp, \product[2]\, product[2], multiplier, 1
instance = comp, \PPSMPR[3]~feeder\, PPSMPR[3]~feeder, multiplier, 1
instance = comp, \PPSMPR[3]\, PPSMPR[3], multiplier, 1
instance = comp, \product[3]\, product[3], multiplier, 1
instance = comp, \A[1]~input\, A[1]~input, multiplier, 1
instance = comp, \MPD[3]~0\, MPD[3]~0, multiplier, 1
instance = comp, \MPD[1]\, MPD[1], multiplier, 1
instance = comp, \Add0~2\, Add0~2, multiplier, 1
instance = comp, \Add0~4\, Add0~4, multiplier, 1
instance = comp, \Add0~6\, Add0~6, multiplier, 1
instance = comp, \Add0~8\, Add0~8, multiplier, 1
instance = comp, \Selector0~0\, Selector0~0, multiplier, 1
instance = comp, \PPS[4]\, PPS[4], multiplier, 1
instance = comp, \Selector1~0\, Selector1~0, multiplier, 1
instance = comp, \PPS[3]\, PPS[3], multiplier, 1
instance = comp, \Selector2~0\, Selector2~0, multiplier, 1
instance = comp, \PPS[2]\, PPS[2], multiplier, 1
instance = comp, \PPSMPR[5]~feeder\, PPSMPR[5]~feeder, multiplier, 1
instance = comp, \PPSMPR[5]\, PPSMPR[5], multiplier, 1
instance = comp, \product[5]\, product[5], multiplier, 1
instance = comp, \Selector3~0\, Selector3~0, multiplier, 1
instance = comp, \PPS[1]\, PPS[1], multiplier, 1
instance = comp, \PPSMPR[4]~feeder\, PPSMPR[4]~feeder, multiplier, 1
instance = comp, \PPSMPR[4]\, PPSMPR[4], multiplier, 1
instance = comp, \product[4]\, product[4], multiplier, 1
instance = comp, \PPSMPR[7]~feeder\, PPSMPR[7]~feeder, multiplier, 1
instance = comp, \PPSMPR[7]\, PPSMPR[7], multiplier, 1
instance = comp, \product[7]\, product[7], multiplier, 1
instance = comp, \BCD~0\, BCD~0, multiplier, 1
instance = comp, \BCD~2\, BCD~2, multiplier, 1
instance = comp, \BCD~5\, BCD~5, multiplier, 1
instance = comp, \BCD~3\, BCD~3, multiplier, 1
instance = comp, \BCD~7\, BCD~7, multiplier, 1
instance = comp, \BCD~6\, BCD~6, multiplier, 1
instance = comp, \BCD~8\, BCD~8, multiplier, 1
instance = comp, \BCD~11\, BCD~11, multiplier, 1
instance = comp, \BCD~10\, BCD~10, multiplier, 1
instance = comp, \Mux6~0\, Mux6~0, multiplier, 1
instance = comp, \state.s0~clkctrl\, state.s0~clkctrl, multiplier, 1
instance = comp, \segment[0]$latch\, segment[0]$latch, multiplier, 1
instance = comp, \BCD~9\, BCD~9, multiplier, 1
instance = comp, \Mux5~0\, Mux5~0, multiplier, 1
instance = comp, \segment[1]$latch\, segment[1]$latch, multiplier, 1
instance = comp, \Mux4~0\, Mux4~0, multiplier, 1
instance = comp, \segment[2]$latch\, segment[2]$latch, multiplier, 1
instance = comp, \Mux3~0\, Mux3~0, multiplier, 1
instance = comp, \segment[3]$latch\, segment[3]$latch, multiplier, 1
instance = comp, \Mux2~0\, Mux2~0, multiplier, 1
instance = comp, \segment[4]$latch\, segment[4]$latch, multiplier, 1
instance = comp, \Mux1~0\, Mux1~0, multiplier, 1
instance = comp, \segment[5]$latch\, segment[5]$latch, multiplier, 1
instance = comp, \Mux0~0\, Mux0~0, multiplier, 1
instance = comp, \segment[6]$latch\, segment[6]$latch, multiplier, 1
instance = comp, \BCD~15\, BCD~15, multiplier, 1
instance = comp, \BCD~1\, BCD~1, multiplier, 1
instance = comp, \BCD~13\, BCD~13, multiplier, 1
instance = comp, \BCD~17\, BCD~17, multiplier, 1
instance = comp, \BCD~18\, BCD~18, multiplier, 1
instance = comp, \BCD~4\, BCD~4, multiplier, 1
instance = comp, \BCD~19\, BCD~19, multiplier, 1
instance = comp, \BCD~20\, BCD~20, multiplier, 1
instance = comp, \BCD~12\, BCD~12, multiplier, 1
instance = comp, \PPSMPR[6]~feeder\, PPSMPR[6]~feeder, multiplier, 1
instance = comp, \PPSMPR[6]\, PPSMPR[6], multiplier, 1
instance = comp, \product[6]\, product[6], multiplier, 1
instance = comp, \BCD~21\, BCD~21, multiplier, 1
instance = comp, \BCD~22\, BCD~22, multiplier, 1
instance = comp, \LessThan4~0\, LessThan4~0, multiplier, 1
instance = comp, \LessThan4~1\, LessThan4~1, multiplier, 1
instance = comp, \BCD~14\, BCD~14, multiplier, 1
instance = comp, \LessThan6~0\, LessThan6~0, multiplier, 1
instance = comp, \BCD~23\, BCD~23, multiplier, 1
instance = comp, \Mux13~0\, Mux13~0, multiplier, 1
instance = comp, \segment2[0]$latch\, segment2[0]$latch, multiplier, 1
instance = comp, \Mux12~0\, Mux12~0, multiplier, 1
instance = comp, \segment2[1]$latch\, segment2[1]$latch, multiplier, 1
instance = comp, \Mux11~0\, Mux11~0, multiplier, 1
instance = comp, \segment2[2]$latch\, segment2[2]$latch, multiplier, 1
instance = comp, \Mux10~0\, Mux10~0, multiplier, 1
instance = comp, \segment2[3]$latch\, segment2[3]$latch, multiplier, 1
instance = comp, \Mux9~0\, Mux9~0, multiplier, 1
instance = comp, \segment2[4]$latch\, segment2[4]$latch, multiplier, 1
instance = comp, \BCD~24\, BCD~24, multiplier, 1
instance = comp, \Mux8~0\, Mux8~0, multiplier, 1
instance = comp, \segment2[5]$latch\, segment2[5]$latch, multiplier, 1
instance = comp, \Mux7~0\, Mux7~0, multiplier, 1
instance = comp, \segment2[6]$latch\, segment2[6]$latch, multiplier, 1
instance = comp, \BCD~25\, BCD~25, multiplier, 1
instance = comp, \Mux15~0\, Mux15~0, multiplier, 1
instance = comp, \segment3[0]$latch\, segment3[0]$latch, multiplier, 1
instance = comp, \Mux15~1\, Mux15~1, multiplier, 1
instance = comp, \segment3[2]$latch\, segment3[2]$latch, multiplier, 1
instance = comp, \segment3[4]$latch\, segment3[4]$latch, multiplier, 1
instance = comp, \Mux15~2\, Mux15~2, multiplier, 1
instance = comp, \segment3[5]$latch\, segment3[5]$latch, multiplier, 1
instance = comp, \segment3[6]$latch\, segment3[6]$latch, multiplier, 1
